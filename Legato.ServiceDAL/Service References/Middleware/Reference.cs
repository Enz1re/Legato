//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Legato.ServiceDAL.Middleware {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Middleware.ILegatoMiddleware")]
    public interface ILegatoMiddleware {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsResponse")]
        Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel[] GetAcousticClassicalGuitars(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsResponse")]
        System.Threading.Tasks.Task<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel[]> GetAcousticClassicalGuitarsAsync(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarVendorsResponse")]
        string[] GetAcousticClassicalGuitarVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarVendorsResponse")]
        System.Threading.Tasks.Task<string[]> GetAcousticClassicalGuitarVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarQuantity", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarQuantityResponse")]
        int GetAcousticClassicalGuitarQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarQuantity", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarQuantityResponse")]
        System.Threading.Tasks.Task<int> GetAcousticClassicalGuitarQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsResponse")]
        Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel[] GetAcousticWesternGuitars(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsResponse")]
        System.Threading.Tasks.Task<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel[]> GetAcousticWesternGuitarsAsync(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarVendorsResponse")]
        string[] GetAcousticWesternGuitarVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarVendorsResponse")]
        System.Threading.Tasks.Task<string[]> GetAcousticWesternGuitarVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarQuantity", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarQuantityResponse")]
        int GetAcousticWesternGuitarQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarQuantity", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarQuantityResponse")]
        System.Threading.Tasks.Task<int> GetAcousticWesternGuitarQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsResponse")]
        Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel[] GetElectricGuitars(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsResponse")]
        System.Threading.Tasks.Task<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel[]> GetElectricGuitarsAsync(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarVendorsResponse")]
        string[] GetElectricGuitarVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarVendorsResponse")]
        System.Threading.Tasks.Task<string[]> GetElectricGuitarVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarQuantity", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarQuantityResponse")]
        int GetElectricGuitarQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarQuantity", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarQuantityResponse")]
        System.Threading.Tasks.Task<int> GetElectricGuitarQuantityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsResponse")]
        Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel[] GetBassGuitars(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsResponse")]
        System.Threading.Tasks.Task<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel[]> GetBassGuitarsAsync(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarVendorsResponse")]
        string[] GetBassGuitarVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarVendorsResponse")]
        System.Threading.Tasks.Task<string[]> GetBassGuitarVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarQuantity", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarQuantityResponse")]
        int GetBassGuitarQuantity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarQuantity", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarQuantityResponse")]
        System.Threading.Tasks.Task<int> GetBassGuitarQuantityAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILegatoMiddlewareChannel : Legato.ServiceDAL.Middleware.ILegatoMiddleware, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LegatoMiddlewareClient : System.ServiceModel.ClientBase<Legato.ServiceDAL.Middleware.ILegatoMiddleware>, Legato.ServiceDAL.Middleware.ILegatoMiddleware {
        
        public LegatoMiddlewareClient() {
        }
        
        public LegatoMiddlewareClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LegatoMiddlewareClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegatoMiddlewareClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegatoMiddlewareClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel[] GetAcousticClassicalGuitars(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound) {
            return base.Channel.GetAcousticClassicalGuitars(filter, lowerBound, upperBound);
        }
        
        public System.Threading.Tasks.Task<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel[]> GetAcousticClassicalGuitarsAsync(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound) {
            return base.Channel.GetAcousticClassicalGuitarsAsync(filter, lowerBound, upperBound);
        }
        
        public string[] GetAcousticClassicalGuitarVendors() {
            return base.Channel.GetAcousticClassicalGuitarVendors();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAcousticClassicalGuitarVendorsAsync() {
            return base.Channel.GetAcousticClassicalGuitarVendorsAsync();
        }
        
        public int GetAcousticClassicalGuitarQuantity() {
            return base.Channel.GetAcousticClassicalGuitarQuantity();
        }
        
        public System.Threading.Tasks.Task<int> GetAcousticClassicalGuitarQuantityAsync() {
            return base.Channel.GetAcousticClassicalGuitarQuantityAsync();
        }
        
        public Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel[] GetAcousticWesternGuitars(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound) {
            return base.Channel.GetAcousticWesternGuitars(filter, lowerBound, upperBound);
        }
        
        public System.Threading.Tasks.Task<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel[]> GetAcousticWesternGuitarsAsync(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound) {
            return base.Channel.GetAcousticWesternGuitarsAsync(filter, lowerBound, upperBound);
        }
        
        public string[] GetAcousticWesternGuitarVendors() {
            return base.Channel.GetAcousticWesternGuitarVendors();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAcousticWesternGuitarVendorsAsync() {
            return base.Channel.GetAcousticWesternGuitarVendorsAsync();
        }
        
        public int GetAcousticWesternGuitarQuantity() {
            return base.Channel.GetAcousticWesternGuitarQuantity();
        }
        
        public System.Threading.Tasks.Task<int> GetAcousticWesternGuitarQuantityAsync() {
            return base.Channel.GetAcousticWesternGuitarQuantityAsync();
        }
        
        public Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel[] GetElectricGuitars(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound) {
            return base.Channel.GetElectricGuitars(filter, lowerBound, upperBound);
        }
        
        public System.Threading.Tasks.Task<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel[]> GetElectricGuitarsAsync(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound) {
            return base.Channel.GetElectricGuitarsAsync(filter, lowerBound, upperBound);
        }
        
        public string[] GetElectricGuitarVendors() {
            return base.Channel.GetElectricGuitarVendors();
        }
        
        public System.Threading.Tasks.Task<string[]> GetElectricGuitarVendorsAsync() {
            return base.Channel.GetElectricGuitarVendorsAsync();
        }
        
        public int GetElectricGuitarQuantity() {
            return base.Channel.GetElectricGuitarQuantity();
        }
        
        public System.Threading.Tasks.Task<int> GetElectricGuitarQuantityAsync() {
            return base.Channel.GetElectricGuitarQuantityAsync();
        }
        
        public Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel[] GetBassGuitars(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound) {
            return base.Channel.GetBassGuitars(filter, lowerBound, upperBound);
        }
        
        public System.Threading.Tasks.Task<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel[]> GetBassGuitarsAsync(Legato.MiddlewareContracts.DataContracts.FilterDataModel filter, int lowerBound, int upperBound) {
            return base.Channel.GetBassGuitarsAsync(filter, lowerBound, upperBound);
        }
        
        public string[] GetBassGuitarVendors() {
            return base.Channel.GetBassGuitarVendors();
        }
        
        public System.Threading.Tasks.Task<string[]> GetBassGuitarVendorsAsync() {
            return base.Channel.GetBassGuitarVendorsAsync();
        }
        
        public int GetBassGuitarQuantity() {
            return base.Channel.GetBassGuitarQuantity();
        }
        
        public System.Threading.Tasks.Task<int> GetBassGuitarQuantityAsync() {
            return base.Channel.GetBassGuitarQuantityAsync();
        }
    }
}
