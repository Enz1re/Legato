//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Legato.ServiceDAL.Middleware {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Middleware.ILegatoMiddleware")]
    public interface ILegatoMiddleware {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAllAcousticClassicalGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAllAcousticClassicalGuitarsResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel> GetAllAcousticClassicalGuitars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAllAcousticClassicalGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAllAcousticClassicalGuitarsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel>> GetAllAcousticClassicalGuitarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarVendorsResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel> GetAcousticClassicalGuitarVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarVendorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel>> GetAcousticClassicalGuitarVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsByPrice", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsByPriceResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel> GetAcousticClassicalGuitarsByPrice(short from, short to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsByPrice", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsByPriceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel>> GetAcousticClassicalGuitarsByPriceAsync(short from, short to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsByVendor", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsByVendorResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel> GetAcousticClassicalGuitarsByVendor(string vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsByVendor", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticClassicalGuitarsByVendorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel>> GetAcousticClassicalGuitarsByVendorAsync(string vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAllAcousticWesternGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAllAcousticWesternGuitarsResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel> GetAllAcousticWesternGuitars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAllAcousticWesternGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAllAcousticWesternGuitarsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel>> GetAllAcousticWesternGuitarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarVendorsResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel> GetAcousticWesternGuitarVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarVendorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel>> GetAcousticWesternGuitarVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsByPrice", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsByPriceResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel> GetAcousticWesternGuitarsByPrice(short from, short to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsByPrice", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsByPriceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel>> GetAcousticWesternGuitarsByPriceAsync(short from, short to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsByVendor", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsByVendorResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel> GetAcousticWesternGuitarsByVendor(string vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsByVendor", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAcousticWesternGuitarsByVendorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel>> GetAcousticWesternGuitarsByVendorAsync(string vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAllElectricGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAllElectricGuitarsResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel> GetAllElectricGuitars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAllElectricGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAllElectricGuitarsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel>> GetAllElectricGuitarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarVendorsResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel> GetElectricGuitarVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarVendorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel>> GetElectricGuitarVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsByPrice", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsByPriceResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel> GetElectricGuitarsByPrice(short from, short to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsByPrice", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsByPriceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel>> GetElectricGuitarsByPriceAsync(short from, short to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsByVendor", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsByVendorResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel> GetElectricGuitarsByVendor(string vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsByVendor", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetElectricGuitarsByVendorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel>> GetElectricGuitarsByVendorAsync(string vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAllBassGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAllBassGuitarsResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel> GetAllBassGuitars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetAllBassGuitars", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetAllBassGuitarsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel>> GetAllBassGuitarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarVendorsResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel> GetBassGuitarVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarVendors", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarVendorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel>> GetBassGuitarVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsByPrice", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsByPriceResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel> GetBassGuitarsByPrice(short from, short to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsByPrice", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsByPriceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel>> GetBassGuitarsByPriceAsync(short from, short to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsByVendor", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsByVendorResponse")]
        System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel> GetBassGuitarsByVendor(string vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsByVendor", ReplyAction="http://tempuri.org/ILegatoMiddleware/GetBassGuitarsByVendorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel>> GetBassGuitarsByVendorAsync(string vendor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILegatoMiddlewareChannel : Legato.ServiceDAL.Middleware.ILegatoMiddleware, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LegatoMiddlewareClient : System.ServiceModel.ClientBase<Legato.ServiceDAL.Middleware.ILegatoMiddleware>, Legato.ServiceDAL.Middleware.ILegatoMiddleware {
        
        public LegatoMiddlewareClient() {
        }
        
        public LegatoMiddlewareClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LegatoMiddlewareClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegatoMiddlewareClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LegatoMiddlewareClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel> GetAllAcousticClassicalGuitars() {
            return base.Channel.GetAllAcousticClassicalGuitars();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel>> GetAllAcousticClassicalGuitarsAsync() {
            return base.Channel.GetAllAcousticClassicalGuitarsAsync();
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel> GetAcousticClassicalGuitarVendors() {
            return base.Channel.GetAcousticClassicalGuitarVendors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel>> GetAcousticClassicalGuitarVendorsAsync() {
            return base.Channel.GetAcousticClassicalGuitarVendorsAsync();
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel> GetAcousticClassicalGuitarsByPrice(short from, short to) {
            return base.Channel.GetAcousticClassicalGuitarsByPrice(from, to);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel>> GetAcousticClassicalGuitarsByPriceAsync(short from, short to) {
            return base.Channel.GetAcousticClassicalGuitarsByPriceAsync(from, to);
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel> GetAcousticClassicalGuitarsByVendor(string vendor) {
            return base.Channel.GetAcousticClassicalGuitarsByVendor(vendor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticClassicalGuitarDataModel>> GetAcousticClassicalGuitarsByVendorAsync(string vendor) {
            return base.Channel.GetAcousticClassicalGuitarsByVendorAsync(vendor);
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel> GetAllAcousticWesternGuitars() {
            return base.Channel.GetAllAcousticWesternGuitars();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel>> GetAllAcousticWesternGuitarsAsync() {
            return base.Channel.GetAllAcousticWesternGuitarsAsync();
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel> GetAcousticWesternGuitarVendors() {
            return base.Channel.GetAcousticWesternGuitarVendors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel>> GetAcousticWesternGuitarVendorsAsync() {
            return base.Channel.GetAcousticWesternGuitarVendorsAsync();
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel> GetAcousticWesternGuitarsByPrice(short from, short to) {
            return base.Channel.GetAcousticWesternGuitarsByPrice(from, to);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel>> GetAcousticWesternGuitarsByPriceAsync(short from, short to) {
            return base.Channel.GetAcousticWesternGuitarsByPriceAsync(from, to);
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel> GetAcousticWesternGuitarsByVendor(string vendor) {
            return base.Channel.GetAcousticWesternGuitarsByVendor(vendor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.AcousticWesternGuitarDataModel>> GetAcousticWesternGuitarsByVendorAsync(string vendor) {
            return base.Channel.GetAcousticWesternGuitarsByVendorAsync(vendor);
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel> GetAllElectricGuitars() {
            return base.Channel.GetAllElectricGuitars();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel>> GetAllElectricGuitarsAsync() {
            return base.Channel.GetAllElectricGuitarsAsync();
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel> GetElectricGuitarVendors() {
            return base.Channel.GetElectricGuitarVendors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel>> GetElectricGuitarVendorsAsync() {
            return base.Channel.GetElectricGuitarVendorsAsync();
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel> GetElectricGuitarsByPrice(short from, short to) {
            return base.Channel.GetElectricGuitarsByPrice(from, to);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel>> GetElectricGuitarsByPriceAsync(short from, short to) {
            return base.Channel.GetElectricGuitarsByPriceAsync(from, to);
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel> GetElectricGuitarsByVendor(string vendor) {
            return base.Channel.GetElectricGuitarsByVendor(vendor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.ElectricGuitarDataModel>> GetElectricGuitarsByVendorAsync(string vendor) {
            return base.Channel.GetElectricGuitarsByVendorAsync(vendor);
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel> GetAllBassGuitars() {
            return base.Channel.GetAllBassGuitars();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel>> GetAllBassGuitarsAsync() {
            return base.Channel.GetAllBassGuitarsAsync();
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel> GetBassGuitarVendors() {
            return base.Channel.GetBassGuitarVendors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.VendorDataModel>> GetBassGuitarVendorsAsync() {
            return base.Channel.GetBassGuitarVendorsAsync();
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel> GetBassGuitarsByPrice(short from, short to) {
            return base.Channel.GetBassGuitarsByPrice(from, to);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel>> GetBassGuitarsByPriceAsync(short from, short to) {
            return base.Channel.GetBassGuitarsByPriceAsync(from, to);
        }
        
        public System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel> GetBassGuitarsByVendor(string vendor) {
            return base.Channel.GetBassGuitarsByVendor(vendor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Legato.MiddlewareContracts.DataContracts.BassGuitarDataModel>> GetBassGuitarsByVendorAsync(string vendor) {
            return base.Channel.GetBassGuitarsByVendorAsync(vendor);
        }
    }
}
